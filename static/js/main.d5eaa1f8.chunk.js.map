{"version":3,"sources":["components/contacts/Contact.js","actions/contactAction.js","actions/types.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Contact","state","showContactInfo","onDeleteClick","id","props","deleteContact","this","contact","name","email","phone","className","onClick","setState","style","cursor","marginLeft","float","color","marginTop","bind","to","marginRight","Component","connect","dispatch","a","axios","delete","type","payload","Contacts","getContacts","contacts","Fragment","map","key","get","res","data","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","PropsTypes","PropTypes","string","isRequired","func","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","addContact","history","push","target","post","EditContact","updatedContact","match","params","updateContact","nextProps","nextState","getContact","put","Header","branding","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","exact","path","component","About","NotFound","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d5eaa1f8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../actions/contactAction\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteContact(id);\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <div className=\"card card-body mb-3\">\r\n        <h4>\r\n          {name}\r\n          <i\r\n            onClick={() =>\r\n              this.setState({\r\n                showContactInfo: !this.state.showContactInfo,\r\n              })\r\n            }\r\n            className=\"fas fa-sort-down\"\r\n            style={{ cursor: \"pointer\", marginLeft: \"7px\" }}\r\n          />\r\n          <i\r\n            className=\"fas fa-times\"\r\n            style={{\r\n              cursor: \"pointer\",\r\n              float: \"right\",\r\n              color: \"red\",\r\n              marginTop: \"5px\",\r\n            }}\r\n            onClick={this.onDeleteClick.bind(this, id)}\r\n          />\r\n          <Link to={`contact/edit/${id}`}>\r\n            <i\r\n              className=\"fas fa-pencil-alt\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                float: \"right\",\r\n                color: \"black\",\r\n                marginRight: \"1rem\",\r\n                marginTop: \"5px\",\r\n              }}\r\n            />\r\n          </Link>\r\n        </h4>\r\n        {showContactInfo ? (\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">Email: {email}</li>\r\n            <li className=\"list-group-item\">Phone: {phone}</li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteContact })(Contact);\r\n","import {\r\n  GET_CONTACTS,\r\n  DELETE_CONTACT,\r\n  ADD_CONTACT,\r\n  UPDATE_CONTACT,\r\n  GET_CONTACT,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const getContacts = () => async (dispatch) => {\r\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n  dispatch({\r\n    type: GET_CONTACTS,\r\n    payload: res.data,\r\n  });\r\n};\r\nexport const getContact = (id) => async (dispatch) => {\r\n  const res = await axios.get(\r\n    `https://jsonplaceholder.typicode.com/users/${id}`\r\n  );\r\n  dispatch({\r\n    type: GET_CONTACT,\r\n    payload: res.data,\r\n  });\r\n};\r\nexport const deleteContact = (id) => async (dispatch) => {\r\n  await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n  dispatch({\r\n    type: DELETE_CONTACT,\r\n    payload: id,\r\n  });\r\n};\r\nexport const addContact = (contact) => async (dispatch) => {\r\n  const res = await axios.post(\r\n    `https://jsonplaceholder.typicode.com/users`,\r\n    contact\r\n  );\r\n  dispatch({\r\n    type: ADD_CONTACT,\r\n    payload: res.data,\r\n  });\r\n};\r\nexport const updateContact = (contact) => async (dispatch) => {\r\n  const res = await axios.put(\r\n    `https://jsonplaceholder.typicode.com/users/${contact.id}`,\r\n    contact\r\n  );\r\n  dispatch({\r\n    type: UPDATE_CONTACT,\r\n    payload: res.data,\r\n  });\r\n};\r\n","export const GET_CONTACTS = \"GET_CONTACTS\";\r\nexport const GET_CONTACT = \"GET_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { connect } from \"react-redux\";\r\n// import { GET_CONTACTS } from \"../../actions/types\";\r\nimport { getContacts } from \"../../actions/contactAction\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Contacts extends Component {\r\n  componentDidMount() {\r\n    this.props.getContacts();\r\n  }\r\n  render() {\r\n    const { contacts } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"display-4 mb-2\">\r\n          <span className=\"text-danger\">Contact</span> List\r\n        </h1>\r\n        {contacts.map((contact) => (\r\n          <Contact key={contact.id} contact={contact} />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  getContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contact.contacts,\r\n});\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   getContacts: () => dispatch({ type: GET_CONTACTS }),\r\n// });\r\n\r\nexport default connect(mapStateToProps, { getContacts })(Contacts);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classname\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  placeholder,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\" form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.PropsTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../actions/contactAction\";\r\nimport PropTypes from \"prop-types\";\r\n// import uuid from \"react-uuid\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required.\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required.\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"phone is required.\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      // id: uuid(),\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    this.props.addContact(newContact);\r\n\r\n    //clearing the state and textFields\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Add Contact</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <TextInputGroup\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              value={name}\r\n              placeholder=\"Enter Name...\"\r\n              onChange={this.onChange}\r\n              error={errors.name}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter Email...\"\r\n              onChange={this.onChange}\r\n              error={errors.email}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              value={phone}\r\n              placeholder=\"Enter Phone...\"\r\n              onChange={this.onChange}\r\n              error={errors.phone}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn-light btn-block\"\r\n              value=\"Add Contact\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddContact.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addContact })(AddContact);\r\n","import React, { Component } from \"react\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport { connect } from \"react-redux\";\r\nimport { getContact, updateContact } from \"../../actions/contactAction\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps, nextState) {\r\n    const { name, email, phone } = nextProps.contact;\r\n    this.setState({\r\n      name,\r\n      email,\r\n      phone,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getContact(id);\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required.\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required.\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"phone is required.\" } });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const updatedContact = {\r\n      id,\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    this.props.updateContact(updatedContact);\r\n\r\n    //clearing the state and textFields\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Edit Contact</div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <TextInputGroup\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              value={name}\r\n              placeholder=\"Enter Name...\"\r\n              onChange={this.onChange}\r\n              error={errors.name}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter Email...\"\r\n              onChange={this.onChange}\r\n              error={errors.email}\r\n            />\r\n            <TextInputGroup\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              value={phone}\r\n              placeholder=\"Enter Phone...\"\r\n              onChange={this.onChange}\r\n              error={errors.phone}\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn-light btn-block\"\r\n              value=\"Update Contact\"\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  getContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contact: state.contact.contact,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getContact, updateContact })(\r\n  EditContact\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <span className=\"fas fa-home\">Home</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <span className=\"fas fa-plus\">Add</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <span className=\"fas fa-question\">About</span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <br />\r\n      <p className=\"lead\">Simple app to manage contacts </p>\r\n      <br />\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        {\" \"}\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <br />\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  GET_CONTACTS,\r\n  DELETE_CONTACT,\r\n  ADD_CONTACT,\r\n  UPDATE_CONTACT,\r\n  GET_CONTACT,\r\n} from \"../actions/types\";\r\n// import uuid from \"react-uuid\";\r\n\r\nconst initialState = {\r\n  contacts: [\r\n    // {\r\n    //   id: uuid(),\r\n    //   name: \"Mahesh Soni\",\r\n    //   email: \"sms@gmail.com\",\r\n    //   phone: \"8980829961\",\r\n    // },\r\n  ],\r\n  contact: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n      };\r\n    case GET_CONTACT:\r\n      return {\r\n        ...state,\r\n        contact: action.payload,\r\n      };\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport contactReducer from \"./contactReducer\";\r\n\r\nexport default combineReducers({\r\n  contact: contactReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = [];\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}